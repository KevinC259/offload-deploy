import{_ as w,r as i,c as m,a as e,m as y,t as r,F as k,n as T,o as b,p as C,k as _,q}from"./index-CSkJ4Wth.js";const R={class:"evaluation-page"},x={class:"grid-container"},I={class:"grid-item question"},S={class:"grid-item reasoning"},U={class:"grid-item options full-row"},L=["value"],O={class:"button-group"},B=["disabled"],E={__name:"EvalView",setup(F){const l=["I have 10 liters of orange drink that are two-thirds water and I wish to add it to 15 liters of pineapple drink that is three-fifths water. But as I pour it, I spill one liter of the orange drink. How much water is in the remaining 24 liters?","Why does a rainbow appear in the sky?","How to determine if a number is a prime number?"],p=[`Okay, let me try to figure this out step by step. So, the problem is about mixing two different drinks, but there's a spill involved. Let me read it again to make sure I get all the details right.
Alright, the user has 10 liters of orange drink that's two-thirds water. They want to add this to 15 liters of pineapple drink that's three-fifths water. But while pouring, they spill one liter of the orange drink. The question is, how much water is in the remaining 24 liters after this process?
Hmm, first, I need to figure out the amount of water in each drink before any spilling happens, then account for the spill, and then combine them. Let me break it down.
Starting with the orange drink. The user initially has 10 liters, which is two-thirds water. So, the water in the orange drink would be (2/3) * 10 liters. Let me calculate that: 2/3 of 10 is (2*10)/3 = 20/3 ≈ 6.6667 liters. So, approximately 6.6667 liters of water in the orange drink, and the rest is orange stuff. The non-water part would be 10 - 20/3 = (30/3 - 20/3) = 10/3 ≈ 3.3333 liters. Then, they spill one liter of the orange drink.`,"A rainbow is formed due to the refraction, reflection, and dispersion of sunlight in raindrops. When sunlight enters a raindrop, it refracts, and different colors of light separate due to their varying wavelengths, ultimately forming a rainbow. box{A rainbow is formed by refraction and dispersion}","To determine if a number n is prime, check if any integer from 2 to √n can divide n. For example, to check if 13 is prime, test 2 and 3, since √13 ≈ 3.6. Since 13 is not divisible by 2 or 3, 13 is prime. box{13 is prime}"],c=Math.floor(Math.random()*l.length),d=i(l[c]),u=i(p[c]),s=["Reasonable and Complete: The current reasoning meets both reasonableness and completeness requirements","Reasonable but Incomplete: The current reasoning is reasonable but does not include the final answer to the problem semantically or structurally","Unreasonable and Incomplete: The current reasoning does not meet all reasonableness requirements and does not include the final answer to the problem semantically or structurally","Unreasonable but Complete: The current reasoning does not meet all reasonableness requirements but includes the final answer to the problem semantically and structurally"],n=i(null),g=()=>{n.value&&alert(`You selected option ${n.value}: ${s[n.value-1]}`)},v=()=>{const h=`
  Evaluation Criteria
  Reasonableness:
  - Formal Logic: The current reasoning conforms to formal logic rules, with no skipped steps, missing steps, incorrect steps, or erroneous conclusions
  - Knowledge Usage: The knowledge involved in the current reasoning aligns with common knowledge
  - Solution: The current reasoning uses feasible solutions to address the problem
  Completeness:
  - Conclusion: Semantically, there exists an answer to the given problem or a conclusion with equivalent efficiency
  - Format: Contains content in the format box{answer}
  
  Options: Description
  1. Reasonable and Complete: The current reasoning meets both reasonableness and completeness requirements
  2. Reasonable but Incomplete: The current reasoning is reasonable but does not include the final answer to the problem semantically or structurally
  3. Unreasonable and Incomplete: The current reasoning does not meet all reasonableness requirements and does not include the final answer to the problem semantically or structurally
  4. Unreasonable but Complete: The current reasoning does not meet all reasonableness requirements but includes the final answer to the problem semantically and structurally
  
  Question
  ${d.value}
  
  Current Reasoning
  ${u.value}
  
  Options
  ${n.value?`Selected: ${s[n.value-1]}`:"No option selected"}
    `,t=new Blob([h],{type:"text/plain"}),o=URL.createObjectURL(t),a=document.createElement("a");a.href=o,a.download="evaluation_content.txt",a.click(),URL.revokeObjectURL(o)};return(h,t)=>(b(),m("div",R,[e("div",x,[t[4]||(t[4]=y('<div class="grid-item standard" data-v-aeb92c57><h2 data-v-aeb92c57>Evaluation Criteria</h2><p data-v-aeb92c57><strong data-v-aeb92c57>Reasonableness:</strong></p><ul data-v-aeb92c57><li data-v-aeb92c57>Formal Logic: The current reasoning conforms to formal logic rules, with no skipped steps, missing steps, incorrect steps, or erroneous conclusions.</li><li data-v-aeb92c57>Knowledge Usage: The knowledge involved in the current reasoning aligns with common knowledge. </li><li data-v-aeb92c57>Solution: The current reasoning uses feasible solutions to address the problem.</li></ul><p data-v-aeb92c57><strong data-v-aeb92c57>Completeness:</strong></p><ul data-v-aeb92c57><li data-v-aeb92c57>Conclusion: Semantically, there exists an answer to the given problem or a conclusion with equivalent efficiency.</li><li data-v-aeb92c57>Format: Contains content in the format <code data-v-aeb92c57>box{answer}</code>.</li></ul></div><div class="grid-item description" data-v-aeb92c57><h2 data-v-aeb92c57>Options: Description</h2><p data-v-aeb92c57>Below are the choices you can make:</p><ol data-v-aeb92c57><li data-v-aeb92c57>Reasonable and Complete: The current reasoning meets both reasonableness and completeness requirements.</li><li data-v-aeb92c57>Reasonable but Incomplete: The current reasoning is reasonable but does not include the final answer to the problem semantically or structurally.</li><li data-v-aeb92c57>Unreasonable and Incomplete: The current reasoning does not meet all reasonableness requirements and does not include the final answer to the problem semantically or structurally.</li><li data-v-aeb92c57>Unreasonable but Complete: The current reasoning does not meet all reasonableness requirements but includes the final answer to the problem semantically and structurally.</li></ol></div>',2)),e("div",I,[t[1]||(t[1]=e("h2",null,"Question",-1)),e("p",null,r(d.value),1)]),e("div",S,[t[2]||(t[2]=e("h2",null,"Current Reasoning",-1)),e("p",null,r(u.value),1)]),e("div",U,[t[3]||(t[3]=e("h2",null,"Options",-1)),e("ul",null,[(b(),m(k,null,T(s,(o,a)=>e("li",{key:a},[e("label",null,[C(e("input",{type:"radio",value:a+1,"onUpdate:modelValue":t[0]||(t[0]=f=>n.value=f)},null,8,L),[[q,n.value]]),_(" "+r(o),1)])])),64))]),e("div",O,[e("button",{onClick:g,disabled:!n.value},"Submit Choice",8,B),e("button",{onClick:v},"Download Evaluation Results")])])])]))}},$=w(E,[["__scopeId","data-v-aeb92c57"]]);export{$ as default};
