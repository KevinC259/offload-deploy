import{d as Tt,r as I,G as Ct,H as St,c as x,b as o,w as s,f as N,E as p,a as d,z as E,i as We,k as g,t as y,F as Ge,n as Qe,u as Xe,v as Ye,J as me,o as T,_ as xt}from"./index-CSkJ4Wth.js";import{a as Nt}from"./index-xsH4HHeE.js";import{u as zt}from"./auth-CnjZ6pwZ.js";const Ut=()=>{if(typeof window<"u"){const R=window.location.hostname,P=window.location.origin;if(console.log("当前前端运行环境:",{hostname:R,origin:P}),R==="localhost"||R==="127.0.0.1")return["http://localhost:8111/api","http://localhost:8111/api"];if(R.includes("vivighr.vip"))return["http://vivighr.vip:8111/api","http://localhost:8111/api"]}return["http://localhost:8111/api","http://vivighr.vip:8111/api"]},F=Ut();let D=0;const Se=R=>{const P=Nt.create({baseURL:R,timeout:3e4,headers:{"Content-Type":"application/json"},withCredentials:!0});return P.interceptors.request.use(i=>{const c=zt().token;return c&&(i.headers.Authorization=`Bearer ${c}`),i},i=>Promise.reject(i)),P};let xe=Se(F[D]);const Ot=()=>{if(D++,D<F.length){const R=F[D];return console.log(`切换到备选API地址: ${R}`),xe=Se(R),!0}return!1},Et=()=>{D=0,xe=Se(F[D])},ge=async R=>{let P;const i=D;for(let r=0;r<F.length;r++)try{console.log(`尝试API地址 [${D+1}/${F.length}]: ${F[D]}`);const c=await R(xe);return D!==i&&console.log(`API请求成功，当前使用地址: ${F[D]}`),c}catch(c){if(P=c,console.error(`API地址 ${F[D]} 请求失败:`,c.message),c.code==="ECONNREFUSED"||c.code==="NETWORK_ERROR"||c.response&&[500,502,503,504].includes(c.response.status)){if(!Ot())break}else throw c}throw Et(),P};class A{static async getImageList(P){try{console.log("获取图片列表:",P);const i=await ge(async r=>await r.post("/proxy/images",{output_path:P},{timeout:1e4}));return console.log("获取图片列表成功:",i.data),i.data||[]}catch(i){console.error("获取图片列表失败:",i);let r="未知错误";if(i.response){const c=i.response.status,l=i.response.data;c===404?r="图片目录不存在或为空":c===500?r=`服务器内部错误: ${(l==null?void 0:l.detail)||(l==null?void 0:l.message)||"请检查后端日志"}`:r=`HTTP错误 (${c}): ${(l==null?void 0:l.detail)||(l==null?void 0:l.message)||i.message}`}else i.request?r="网络连接失败: 无法连接到后端服务器":r=i.message||"请求配置错误";throw new Error(`获取图片列表失败: ${r}`)}}static async downloadImage(P,i){try{console.log("下载图片:",{outputPath:P,imagePath:i});const r=await ge(async c=>await c.post("/proxy/images/download",{output_path:P,image_name:i},{responseType:"blob",timeout:3e4}));return console.log("图片下载成功"),r.data}catch(r){console.error("下载图片失败:",r);let c="未知错误";if(r.response){const l=r.response.status,m=r.response.data;l===404?c="图片文件不存在":l===500?c=`服务器内部错误: ${(m==null?void 0:m.detail)||(m==null?void 0:m.message)||"请检查后端日志"}`:c=`HTTP错误 (${l}): ${(m==null?void 0:m.detail)||(m==null?void 0:m.message)||r.message}`}else r.request?c="网络连接失败: 无法连接到后端服务器":c=r.message||"请求配置错误";throw new Error(`下载图片失败: ${c}`)}}static async getImagePreviewUrl(P,i){try{const r=await this.downloadImage(P,i);return window.URL.createObjectURL(r)}catch(r){throw console.error("获取图片预览URL失败:",r),r}}static async cleanupImages(P){try{console.log("清理图片缓存:",P);const i=await ge(async r=>{let c=P;c=c.replace(/\\/g,"/");const l=c.split("/").map(m=>encodeURIComponent(m)).join("/");return await r.delete(`/proxy/images/cleanup/${l}`,{timeout:1e4})});return console.log("图片缓存清理成功:",i.data),i.data||{success:!0,message:"清理完成"}}catch(i){console.error("清理图片缓存失败:",i);let r="未知错误";if(i.response){const c=i.response.status,l=i.response.data;c===404?r="缓存目录不存在":c===500?r=`服务器内部错误: ${(l==null?void 0:l.detail)||(l==null?void 0:l.message)||"请检查后端日志"}`:r=`HTTP错误 (${c}): ${(l==null?void 0:l.detail)||(l==null?void 0:l.message)||i.message}`}else i.request?r="网络连接失败: 无法连接到后端服务器":r=i.message||"请求配置错误";throw new Error(`清理图片缓存失败: ${r}`)}}static async submitTask(P,i){try{console.log("准备提交任务:",{config:i,jsonDataKeys:Object.keys(P)});const r=new FormData,c=JSON.stringify(P,null,2),l=new Blob([c],{type:"application/json"}),m=new File([l],"predictor_config.conf",{type:"application/json"});r.append("conf_file",m);const z={output_path:i.outputPath,image_path:i.imagePath||i.outputPath,callback_url:i.callbackUrl||"http://vivighr.vip:8111/api/callback",cuda_devices:i.cudaDevices||"0",env:i.env||"pytorch112_py311"};r.append("run_params",JSON.stringify(z)),console.log("提交参数:",{configFile:m.name,configSize:m.size,runParams:z});const H=await ge(async B=>await B.post("/run-algorithm/",r,{headers:{"Content-Type":"multipart/form-data"},timeout:3e4}));return console.log("任务提交成功:",H.data),H.data}catch(r){console.error("提交任务失败:",r);let c="未知错误";if(r.response){const l=r.response.status,m=r.response.data;console.error("服务器错误响应:",{status:l,data:m}),l===500?c=`服务器内部错误 (500): ${(m==null?void 0:m.detail)||(m==null?void 0:m.message)||"请检查后端日志"}`:l===400?c=`请求参数错误 (400): ${(m==null?void 0:m.detail)||(m==null?void 0:m.message)||"请检查请求参数"}`:l===404?c="接口不存在 (404): 请检查后端API路径":c=`HTTP错误 (${l}): ${(m==null?void 0:m.detail)||(m==null?void 0:m.message)||r.message}`}else r.request?c="网络连接失败: 无法连接到后端服务器":c=r.message||"请求配置错误";throw new Error(`任务提交失败: ${c}`)}}static async getTaskStatus(P){try{console.log("查询任务状态:",P);const i=await ge(async l=>{let m=P;return m=m.replace(/\\/g,"/"),await l.post("/status",{output_path:m},{headers:{"Content-Type":"application/json"},timeout:1e4})});console.log("任务状态查询成功:",i.data);const r=i.data.status;let c=r;return r==="unknown"&&(console.log("任务状态为unknown，视为已完成"),c="completed"),{task_id:P,status:c,message:i.data.message||"",progress:i.data.progress||0,output_path:i.data.outputPath||P,result:i.data.resultFiles||void 0,error:r==="failed"?i.data.message:void 0,start_time:void 0,end_time:r==="completed"?i.data.timestamp:void 0}}catch(i){console.error("查询任务状态失败:",i);let r="未知错误";if(i.response){const c=i.response.status,l=i.response.data;console.error("服务器错误响应:",{status:c,data:l}),c===404?(console.log("收到404错误，任务状态API端点不存在"),r="任务状态查询失败 (404): 后端服务器未实现状态查询接口"):c===500?r=`服务器内部错误 (500): ${(l==null?void 0:l.detail)||(l==null?void 0:l.message)||"请检查后端日志"}`:c===400?r=`请求参数错误 (400): ${(l==null?void 0:l.detail)||(l==null?void 0:l.message)||"请检查请求参数"}`:r=`HTTP错误 (${c}): ${(l==null?void 0:l.detail)||(l==null?void 0:l.message)||i.message}`}else i.request?r="网络连接失败: 无法连接到后端服务器":r=i.message||"请求配置错误";throw new Error(`查询任务状态失败: ${r}`)}}}const Rt={class:"training-result-container"},Lt={class:"card-header"},Dt={class:"header-actions"},Bt={class:"result-content"},Vt={class:"config-section"},Jt={style:{display:"flex","justify-content":"space-between","align-items":"center","margin-bottom":"16px"}},At={style:{display:"flex",gap:"10px"}},jt={class:"json-monitor-section"},Mt={class:"json-monitor-content"},Ft={class:"config-source-info",style:{"margin-bottom":"10px"}},Ht={key:0,style:{"margin-left":"8px","font-size":"12px",color:"#666"}},qt={class:"json-summary"},Kt={key:0,class:"config-file-info"},Wt={key:0,style:{"margin-bottom":"15px"}},Gt={class:"file-actions",style:{"margin-top":"10px"}},Qt={key:1},Xt={class:"file-actions",style:{"margin-top":"10px"}},Yt={key:0,class:"progress-section"},Zt={class:"status-text"},eo={key:0,class:"task-info"},to={key:1,class:"results-data-section"},oo={key:0,class:"result-stats"},so={key:1,class:"charts-section"},ao={class:"chart-container"},no={class:"chart-placeholder"},lo={class:"chart-container"},ro={class:"chart-placeholder"},io={key:2,class:"best-solution-section"},co={key:0,class:"optimal-params"},uo={key:3,class:"result-files-section"},po={class:"card-header"},mo={class:"image-actions"},go={class:"image-content"},fo={key:0,class:"no-images"},vo={key:1,class:"loading-images"},_o={key:2,class:"images-grid"},ho={class:"image-header"},yo={class:"image-title"},wo={class:"image-actions-small"},bo=["onClick"],ko=["src","alt"],$o={class:"image-overlay"},Po={class:"image-info"},Io={class:"card-header"},To={class:"image-actions"},Co={class:"image-content"},So={key:0,class:"no-images"},xo={key:1,class:"loading-images"},No={key:2,class:"images-grid"},zo={class:"image-header"},Uo={class:"image-title"},Oo={class:"image-actions-small"},Eo=["onClick"],Ro=["src","alt"],Lo={class:"image-overlay"},Do={class:"image-info"},Bo={key:0,class:"image-preview-container"},Vo=["src","alt"],Jo={class:"dialog-footer"},Ao=Tt({__name:"TrainingResultView",setup(R){const i=(()=>{const e=window.location.hostname,t=window.location.origin;return console.log("当前前端运行环境:",{hostname:e,origin:t}),e==="localhost"||e==="127.0.0.1"?["http://localhost:8111","http://vivighr.vip:8111"]:e.includes("vivighr.vip")?["http://vivighr.vip:8111","http://localhost:8111"]:["http://localhost:8111","http://vivighr.vip:8111"]})(),r=async(e,t)=>{let a;for(let n=0;n<i.length;n++){const u=i[n],v=u?`${u}${e}`:e;try{console.log(`尝试API地址 [${n+1}/${i.length}]: ${v}`);const b=await fetch(v,t);if(b.ok)return n>0&&console.log(`API请求成功，使用地址: ${v}`),b;throw b.status>=400&&b.status<500?new Error(`HTTP ${b.status}: ${b.statusText}`):new Error(`HTTP ${b.status}: ${b.statusText}`)}catch(b){if(a=b,console.error(`API地址 ${v} 请求失败:`,b.message),n===i.length-1)break}}throw a},c=I(0),l=I("success"),m=I("优化尚未开始"),z=I(!1),H=I(!1),B=I(!1),w=I(null),ae=I(null),ne=I(0),ye=I(0),we=I(5),fe=I(null),Ze=I(10*60*1e3),le=I(null),Ne=I(3e3),ve=I(0),_e=I(""),et=async()=>{try{if(!_e.value){p.warning("请输入Python后端URL");return}const e=await r("/api/update-python-backend",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:_e.value})});if(e.ok)p.success("Python后端URL更新成功");else throw new Error(`更新失败: ${e.status}`)}catch(e){console.error("更新Python后端URL失败:",e),p.error("更新Python后端URL失败")}},_=I({outputPath:`training_${Date.now()}`,imagePath:"",cudaDevices:"0",env:"pytorch112_py311",callbackUrl:"http://vivighr.vip:8111/api/callback"}),V=I(null),ze=I([]),C=I([]),re=I(!1),ie=I(!1),Q=I(null),L=I([]),ce=I(!1),Ue=e=>({pending:"等待中",running:"运行中",completed:"已完成",failed:"失败"})[e]||e,tt=async()=>{try{p.info("正在测试后端连接...");const e=await r("/api/callback",{method:"GET"});if(e.ok){const t=await e.json();p.success("后端连接正常"),console.log("后端连接测试成功:",t)}else p.warning(`后端响应异常: ${e.status} ${e.statusText}`),console.log("后端响应:",e.status,e.statusText)}catch(e){console.error("连接测试失败:",e),p.error(`连接测试失败: ${e.message||"网络连接错误"}`)}},be=()=>{try{const e=localStorage.getItem("training_complete_config");if(e){const n=JSON.parse(e);return console.log("🎯 获取到完整优化配置:",n),n}const t={},a=["nav_dataSource","nav_globalParam","nav_inputModule","nav_modulePanel","nav_optimizeVariables","nav_optimizationTargets","nav_optimizeAlgorithm","nav_surrogate","nav_robustnessAnalysis","predictor_nav_predictor"];for(const n of a){const u=localStorage.getItem(n);if(u)try{const v=n.replace("nav_","").replace("predictor_","");t[v]=JSON.parse(u)}catch(v){console.warn(`解析配置 ${n} 失败:`,v)}}return console.log("📋 收集到的配置步骤:",t),t}catch(e){return console.error("获优化配置失败:",e),null}},q=()=>{try{const e=localStorage.getItem("predictor_export_config");if(e){const n=JSON.parse(e);return console.log("✅ 使用Predictor页面导出的配置:",n),{form:n.data||{},timestamp:n.timestamp,stepName:"预测器配置（导出）",algorithmId:n.algorithmId,subid:n.subid,fileName:n.fileName,source:"predictor_export"}}const t=be();if(t&&t.predictor)return console.log("✅ 从完整配置中获取预测器配置:",t.predictor),{...t.predictor,source:"complete_config"};const a=["predictor_nav_predictor","predictorConfig","nav_predictor_config"];for(const n of a){const u=localStorage.getItem(n);if(u){const v=JSON.parse(u);return console.log(`✅ 从 ${n} 获取预测器配置:`,v),{...v,source:n}}}return console.warn("⚠️ 未找到预测器配置，使用默认配置"),{form:{},timestamp:new Date().toISOString(),stepName:"预测器配置",source:"default"}}catch(e){return console.error("获取预测器配置失败:",e),null}},ot=e=>({predictor_export:"✅ Predictor页面导出配置",complete_config:"📋 完整优化配置",predictor_nav_predictor:"🔧 预测器导航配置",predictorConfig:"⚙️ 预测器配置",nav_predictor_config:"🧭 导航预测器配置",default:"⚠️ 默认配置"})[e]||`📄 ${e}`,Oe=e=>{try{return JSON.stringify(e,null,2)}catch{return"数据格式错误"}},ke=e=>{try{const t=new Blob([JSON.stringify(e)]).size;return t<1024?`${t} B`:t<1024*1024?`${(t/1024).toFixed(2)} KB`:`${(t/(1024*1024)).toFixed(2)} MB`}catch{return"计算失败"}},st=()=>{try{const t={predictorConfig:q()||{},taskConfig:_.value};return ke(t)}catch{return"计算失败"}},ue=()=>{try{const e=localStorage.getItem("training_config_file_info");return e?JSON.parse(e):null}catch(e){return console.error("获取配置文件信息失败:",e),null}},X=()=>{try{const e=localStorage.getItem("predictor_export_config");return e?JSON.parse(e):null}catch(e){return console.error("获取Predictor导出配置信息失败:",e),null}},at=e=>e<1024?`${e} B`:e<1024*1024?`${(e/1024).toFixed(2)} KB`:`${(e/(1024*1024)).toFixed(2)} MB`,Ee=e=>{try{return new Date(e).toLocaleString("zh-CN")}catch{return e}},nt=()=>{try{const e=be();if(!e){p.error("未找到配置数据");return}const t=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),n=`training_config_${new Date().toISOString().replace(/[:.]/g,"-")}.json`,u=URL.createObjectURL(t),v=document.createElement("a");v.href=u,v.download=n,v.style.display="none",document.body.appendChild(v),v.click(),document.body.removeChild(v),URL.revokeObjectURL(u),p.success(`配置文件已重新下载: ${n}`)}catch(e){console.error("下载配置文件失败:",e),p.error("下载配置文件失败")}},lt=()=>{try{const e=be();if(!e){p.error("未找到配置数据");return}const t=JSON.stringify(e,null,2),a=window.open("","_blank");a?(a.document.write(`
        <html>
          <head>
            <title>完整优化配置</title>
            <style>
              body { font-family: monospace; margin: 20px; }
              pre { background: #f5f5f5; padding: 15px; border-radius: 5px; overflow: auto; }
            </style>
          </head>
          <body>
            <h1>完优化配置</h1>
            <pre>${t}</pre>
          </body>
        </html>
      `),a.document.close()):navigator.clipboard.writeText(t).then(()=>{p.success("配置已复制到剪贴板")}).catch(()=>{p.warning("无法打开新窗口，请检查浏览器设置")})}catch(e){console.error("查看完整配置失败:",e),p.error("查看完整配置失败")}},rt=()=>{try{const e=X();if(!e){p.error("未找到Predictor导出配置数据");return}const t=new Blob([JSON.stringify(e.data,null,2)],{type:"application/json"}),a=URL.createObjectURL(t),n=document.createElement("a");n.href=a,n.download=e.fileName,n.style.display="none",document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(a),p.success(`Predictor配置文件已下载: ${e.fileName}`)}catch(e){console.error("下载Predictor配置文件失败:",e),p.error("下载Predictor配置文件失败")}},it=()=>{try{const e=X();if(!e){p.error("未找到Predictor导出配置数据");return}const t=JSON.stringify(e.data,null,2),a=window.open("","_blank");a?(a.document.write(`
        <html>
          <head>
            <title>Predictor导出配置</title>
            <style>
              body { font-family: monospace; margin: 20px; }
              pre { background: #f5f5f5; padding: 15px; border-radius: 5px; overflow: auto; }
              .info { background: #e7f3ff; padding: 10px; border-radius: 5px; margin-bottom: 15px; }
            </style>
          </head>
          <body>
            <h1>Predictor导出配置</h1>
            <div class="info">
              <p><strong>文件名:</strong> ${e.fileName}</p>
              <p><strong>算法ID:</strong> ${e.algorithmId}</p>
              <p><strong>子ID:</strong> ${e.subid||"无"}</p>
              <p><strong>导出时间:</strong> ${new Date(e.timestamp).toLocaleString("zh-CN")}</p>
            </div>
            <pre>${t}</pre>
          </body>
        </html>
      `),a.document.close()):navigator.clipboard.writeText(t).then(()=>{p.success("Predictor配置已复制到剪贴板")}).catch(()=>{p.warning("无法打开新窗口，请检查浏览器设置")})}catch(e){console.error("查看Predictor配置失败:",e),p.error("查看Predictor配置失败")}},ct=async()=>{try{if(!_.value.outputPath.trim()){p.error("请输入输出路径");return}const e=q();if(!e&&await me.confirm("未找到预测器配置数据，是否继续使用默认配置？","提示",{confirmButtonText:"继续",cancelButtonText:"取消",type:"warning"})!=="confirm")return;const t={predictorConfig:e||{},taskConfig:_.value,timestamp:new Date().toISOString(),userAgent:navigator.userAgent,sessionId:Date.now().toString()};console.group("🚀优化任务提交 - JSON数据监控"),console.log("📋 完整JSON数据:",JSON.stringify(t,null,2)),console.log("🔧 预测器配置:",e),console.log("⚙️ 任务配置:",_.value),console.log("📊 数据大小:",new Blob([JSON.stringify(t)]).size,"bytes"),console.groupEnd(),p.info({message:`正在提交优化任务... 数据大小: ${new Blob([JSON.stringify(t)]).size} bytes`,duration:3e3}),H.value=!0;const a=await A.submitTask(e||{},_.value);w.value=a,z.value=!0,H.value=!1,B.value=!1,c.value=0,l.value="success",m.value="任务已提交，开始优化...";const n={...w.value,output_path:_.value.outputPath,image_path:_.value.imagePath||_.value.outputPath};localStorage.setItem("currentTrainingTask",JSON.stringify(n)),p.success("优化任务已提交"),Re(),dt()}catch(e){H.value=!1,console.error("提交优化任务失败:",e),p.error(`提交任务失败: ${e instanceof Error?e.message:"未知错误"}`)}},Re=()=>{ae.value&&clearInterval(ae.value),ne.value=0,ye.value=0,fe.value=Date.now(),console.log("[轮询] 开始任务状态轮询:",_.value.outputPath),ae.value=setInterval(async()=>{try{if(ye.value++,!_.value.outputPath){console.warn("轮询停止: 缺少输出路径"),j();return}if(fe.value&&Date.now()-fe.value>Ze.value){console.warn("轮询超时，自动停止"),p.warning("优化任务轮询超时，请手动检查任务状态"),j(),z.value=!1;return}const e=await A.getTaskStatus(_.value.outputPath);w.value=e,console.log(`[轮询] 第${ye.value}次轮询 - 状态: ${e.status}, 进度: ${e.progress}%, 消息: ${e.message||"无"}`),ne.value=0,$e(e),e.status==="completed"?ut(e):e.status==="failed"?Le(e):e.status==="processing"?console.log("检测到processing状态，任务正在处理中，继续轮询..."):(e.status==="error"||e.status==="cancelled")&&Le(e)}catch(e){console.error("轮询任务状态失败:",e),ne.value++;const t=e instanceof Error?e.message:String(e);t.includes("404")?(console.warn("后端服务器未实现任务状态查询接口，继续轮询..."),m.value="等待后端服务器响应...",ne.value>=we.value*2&&(console.error("后端服务器长时间未响应，停止轮询"),p.warning("后端服务器未实现状态查询接口，请手动检查任务状态"),j(),z.value=!1)):(console.error("网络或服务器错误:",t),ne.value>=we.value&&(console.error(`连续轮询失败 ${we.value} 次，停止轮询`),p.error("网络连接异常，已停止任务状态轮询"),j(),z.value=!1))}},2e3)},$e=e=>{switch(e.status){case"pending":c.value=10,l.value="warning",m.value="任务等待中...";break;case"running":c.value=e.progress||50,l.value="success",m.value=`优化进行中... ${e.message||""}`;break;case"processing":c.value=e.progress||80,l.value="success",m.value=`正在处理中... ${e.message||""}`;break;case"completed":c.value=100,l.value="success",m.value="优化完成";break;case"failed":case"error":case"cancelled":c.value=100,l.value="exception",m.value=`优化失败: ${e.error||e.message||"未知错误"}`;break;default:c.value=e.progress||30,l.value="warning",m.value=`状态: ${e.status} - ${e.message||"处理中..."}`;break}},ut=async e=>{var t;j(),he(),z.value=!1,B.value=!0,e.result&&(V.value=e.result,Pe(e.result)),p.success("优化任务完成");try{(t=w.value)!=null&&t.output_path&&(console.log("优化完成，刷新图片列表..."),await Z(),await ee(),p.success("优化完成，图片列表已更新"))}catch(a){console.error("刷新图片列表失败:",a),p.warning("优化完成，但刷新图片列表失败")}},Le=e=>{j(),he(),z.value=!1,p.error(`优化任务失败: ${e.error||"未知错误"}`)},j=()=>{ae.value&&(clearInterval(ae.value),ae.value=null)},dt=()=>{le.value&&clearInterval(le.value),ve.value=C.value.length,console.log("开始图片更新检查轮询，间隔:",Ne.value,"ms","当前图片数量:",ve.value),le.value=setInterval(async()=>{var e,t,a,n;try{if(z.value&&(((e=w.value)==null?void 0:e.status)==="running"||((t=w.value)==null?void 0:t.status)==="pending"||((a=w.value)==null?void 0:a.status)==="processing")){console.log("检查图片更新，当前任务状态:",(n=w.value)==null?void 0:n.status);const u=ve.value;if(await Z(),await ee(),C.value.length>u){const v=C.value.length-u;console.log(`检测到 ${v} 张新图片`),p.success(`🖼️ 检测到 ${v} 张新的优化结果图片`)}ve.value=C.value.length}}catch(u){console.error("图片更新检查失败:",u)}},Ne.value)},he=()=>{le.value&&(clearInterval(le.value),le.value=null,console.log("已停止图片更新检查轮询"))},pt=async()=>{try{if(await me.confirm("确定要停止优化任务吗？这将停止轮询并将任务状态设置为完成。","停止优化确认",{confirmButtonText:"确定停止",cancelButtonText:"取消",type:"warning"})==="confirm"){if(j(),he(),z.value=!1,ne.value=0,fe.value=null,w.value){w.value.status="completed",w.value.progress=100,w.value.message="用户手动停止，任务标记为完成",$e(w.value),B.value=!0;try{await Z(),await ee(),p.success("优化已停止，任务状态已设置为完成")}catch(t){console.error("刷新图片列表失败:",t),p.success("优化已停止，任务状态已设置为完成（图片刷新失败）")}}else p.success("已停止任务状态轮询");console.log("用户手动停止了优化，任务状态已设置为完成")}}catch{console.log("用户取消了停止轮询操作")}},Pe=e=>{try{Z(),ee()}catch(t){console.error("处理优化结果失败:",t)}},Y=()=>{var a,n;const e=(a=_.value.imagePath)==null?void 0:a.trim(),t=(n=_.value.outputPath)==null?void 0:n.trim();return e||t||"default"},De=async(e,t)=>{try{const a=t||Y();return await A.getImagePreviewUrl(a,e)}catch(a){return console.error("获取图片预览URL失败:",a),""}},Z=async()=>{const e=C.value.length===0;try{e&&(re.value=!0);const t=Y();console.log("获取图片列表，实际路径:",t);const a=await A.getImageList(t+"/optimizer_state");console.log("后端返回的图片列表:",a,"类型:",typeof a,"是否为数组:",Array.isArray(a));const u=(Array.isArray(a)?typeof a[0]=="string"?a:a.map(f=>f.name||f.path||f):[]).map(f=>{const S=typeof f=="string"?f:f.name||f.path||String(f),O=S.match(/image_(\d{8})_(\d{6})_\d+\.png/);let h=Date.now();if(O){const[,U,J]=O,te=U.substring(0,4),oe=U.substring(4,6),K=U.substring(6,8),W=J.substring(0,2),se=J.substring(2,4),de=J.substring(4,6);h=new Date(`${te}-${oe}-${K}T${W}:${se}:${de}`).getTime()}return{name:S,url:"",size:0,lastModified:h}}),v=C.value.map(f=>f.name).sort(),b=u.map(f=>f.name).sort();if(JSON.stringify(v)!==JSON.stringify(b)||C.value.length===0){C.value=u.sort((f,S)=>S.lastModified-f.lastModified),console.log("图片列表已更新:",u.length,"张图片");for(const f of C.value)try{f.url=await De(f.name,t+"/optimizer_state")}catch(S){console.error(`加载图片URL失败: ${f.name}`,S)}}else console.log("图片列表无变化，跳过更新")}catch(t){console.error("获取图片列表失败:",t),await mt()}finally{e&&(re.value=!1)}},mt=async()=>{try{const e=await r("/local-images",{method:"POST"});if(e.ok){const t=await e.json();if(t.success&&t.images){const a=t.images.map(n=>{const u=typeof n=="string"?n:String(n),v=u.match(/image_(\d{8})_(\d{6})_\d+\.png/);let b=Date.now();if(v){const[,f,S]=v,O=f.substring(0,4),h=f.substring(4,6),U=f.substring(6,8),J=S.substring(0,2),te=S.substring(2,4),oe=S.substring(4,6);b=new Date(`${O}-${h}-${U}T${J}:${te}:${oe}`).getTime()}return{name:u,url:(f=>`${"http://vivighr.vip:8111/api".replace(/\/api$/,"")}/uploads/${f}`)(u),size:0,lastModified:b}});C.value=a.sort((n,u)=>u.lastModified-n.lastModified);return}}}catch(e){console.warn("无法通过API获取本地图片列表:",e)}C.value=[],console.log("本地图片列表已清空")},Be=e=>{Q.value=e,ie.value=!0},Ie=async e=>{if(e)try{const t=Y(),a=await A.downloadImage(t+"/optimizer_state",e.name),n=URL.createObjectURL(a),u=document.createElement("a");u.href=n,u.download=e.name,u.style.display="none",document.body.appendChild(u),u.click(),document.body.removeChild(u),URL.revokeObjectURL(n),p.success(`图片 ${e.name} 下载成功`)}catch(t){console.error("下载图片失败:",t),p.error("图片下载失败")}},gt=async()=>{if(C.value.length===0){p.warning("没有可下载的图片");return}try{p.info("开始下载所有图片...");for(const e of C.value)await Ie(e),await new Promise(t=>setTimeout(t,500));p.success(`所有图片下载完成 (${C.value.length} 张)`)}catch(e){console.error("批量下载图片失败:",e),p.error("批量下载失败")}},Ve=e=>{const t=e.match(/image_(\d{8})_(\d{6})_\d+\.png/);if(t){const[,a,n]=t,u=a.slice(0,4),v=a.slice(4,6),b=a.slice(6,8),M=n.slice(0,2),f=n.slice(2,4),S=n.slice(4,6);return`优化结果 ${u}-${v}-${b} ${M}:${f}:${S}`}return e},Te=e=>e<1024?`${e} B`:e<1024*1024?`${(e/1024).toFixed(2)} KB`:`${(e/(1024*1024)).toFixed(2)} MB`,ee=async()=>{const e=L.value.length===0;try{e&&(ce.value=!0);const t=Y();console.log("获取每代最优结构图列表，实际路径:",t);const a=await A.getImageList(t+"/best_generation_optimal");console.log("后端返回的每代最优结构图列表:",a);const u=(Array.isArray(a)?typeof a[0]=="string"?a:a.map(f=>f.name||f.path||f):[]).map(f=>{const S=typeof f=="string"?f:f.name||f.path||String(f),O=S.match(/(\d{8})_(\d{6})/);let h=Date.now();if(O){const[,U,J]=O,te=U.substring(0,4),oe=U.substring(4,6),K=U.substring(6,8),W=J.substring(0,2),se=J.substring(2,4),de=J.substring(4,6);h=new Date(`${te}-${oe}-${K}T${W}:${se}:${de}`).getTime()}return{name:S,url:"",size:0,lastModified:h}}),v=L.value.map(f=>f.name).sort(),b=u.map(f=>f.name).sort();if(JSON.stringify(v)!==JSON.stringify(b)||L.value.length===0){L.value=u.sort((f,S)=>S.lastModified-f.lastModified),console.log("每代最优结构图列表已更新:",u.length,"张图片");for(const f of L.value)try{f.url=await De(f.name,t+"/best_generation_optimal")}catch(S){console.error(`加载每代最优结构图URL失败: ${f.name}`,S)}}}catch(t){console.error("获取每代最优结构图列表失败:",t),L.value=[]}finally{e&&(ce.value=!1)}},Je=e=>{Q.value=e,ie.value=!0},Ae=async e=>{if(e)try{const t=Y(),a=await A.downloadImage(t+"/best_generation_optimal",e.name),n=URL.createObjectURL(a),u=document.createElement("a");u.href=n,u.download=e.name,u.style.display="none",document.body.appendChild(u),u.click(),document.body.removeChild(u),URL.revokeObjectURL(n),p.success(`每代最优结构图 ${e.name} 下载成功`)}catch(t){console.error("下载每代最优结构图失败:",t),p.error("每代最优结构图下载失败")}},ft=async()=>{if(L.value.length===0){p.warning("没有可下载的每代最优结构图");return}try{p.info("开始下载所有每代最优结构图...");for(const e of L.value)await Ae(e),await new Promise(t=>setTimeout(t,500));p.success(`所有每代最优结构图下载完成 (${L.value.length} 张)`)}catch(e){console.error("批量下载每代最优结构图失败:",e),p.error("批量下载失败")}},vt=async()=>{try{if(await me.confirm("确定要清理所有每代最优结构图吗？此操作不可恢复。","确认清理",{confirmButtonText:"确定清理",cancelButtonText:"取消",type:"warning"})==="confirm"){const t=Y();if(t&&t!=="default"){const a=await A.cleanupImages(t+"/best_generation_optimal");if(a.success)console.log("每代最优结构图清理完成:",a.message),L.value=[],p.success("每代最优结构图清理完成");else throw new Error(`清理每代最优结构图失败: ${a.message}`)}}}catch(e){e!=="cancel"&&(console.error("清理每代最优结构图失败:",e),p.error("清理每代最优结构图失败"))}},Ce=e=>{const t=e.match(/image_(\d{8})_(\d{6})_\d+\.png/);if(t){const[,a,n]=t,u=a.slice(0,4),v=a.slice(4,6),b=a.slice(6,8),M=n.slice(0,2),f=n.slice(2,4),S=n.slice(4,6);return`${u}-${v}-${b} ${M}:${f}:${S}`}return"未知时间"},_t=()=>{var e;if(!((e=w.value)!=null&&e.start_time))return"0";try{const t=new Date(w.value.start_time).getTime(),n=(w.value.status==="completed"&&w.value.end_time?new Date(w.value.end_time).getTime():Date.now())-t;return Math.floor(n/(1e3*60)).toString()}catch(t){return console.error("计算任务持续时间失败:",t),"0"}},ht=e=>!e||typeof e!="object"?[]:Object.entries(e).map(([t,a])=>({name:t,value:typeof a=="number"?a.toFixed(4):String(a),unit:yt(t)})),yt=e=>{const t={frequency:"Hz",amplitude:"V",phase:"°",power:"W",current:"A",voltage:"V",resistance:"Ω",capacitance:"F",inductance:"H"},a=e.toLowerCase();for(const[n,u]of Object.entries(t))if(a.includes(n))return u;return"-"},wt=()=>{if(C.value.length===0)return"无";const e=C.value[0];return Ce(e.name)},bt=()=>{if(C.value.length===0)return"0 B";const e=C.value.reduce((t,a)=>t+(a.size||0),0);return Te(e)},je=()=>{},Me=e=>{const t=e.target;console.warn("图片加载失败:",t.src)},kt=async()=>{try{if(!_.value.outputPath||!z.value)return;const e=await A.getTaskStatus(_.value.outputPath);w.value=e,$e(e),e.status==="completed"&&e.result&&Pe(e.result)}catch(e){console.error("获取优化结果失败:",e),p.error("刷新结果失败")}};Ct(()=>{const e=localStorage.getItem("currentTrainingTask");if(e)try{const t=JSON.parse(e);w.value=t,_.value.outputPath=t.output_path||_.value.outputPath,_.value.imagePath=t.image_path||t.output_path||_.value.outputPath,t.status==="running"||t.status==="pending"?(z.value=!0,Re()):t.status==="completed"&&(B.value=!0,t.result&&Pe(t.result))}catch(t){console.error("恢复任务状态失败:",t)}Z(),ee()});const $t=()=>{z.value=!1,B.value=!1,w.value=null,c.value=0,l.value="success",m.value="优化尚未开始",V.value=null,j(),localStorage.removeItem("currentTrainingTask"),p.success("已重置优化状态，可以重新配置")},Pt=async()=>{try{const{value:e}=await me.prompt(`请选择清理类型：
- backend: 清理后端优化结果图片
- local: 清理本地uploads目录图片
- all: 清理所有图片`,"选择清理类型",{confirmButtonText:"确定清理",cancelButtonText:"取消",inputPlaceholder:"输入: backend, local 或 all",inputValue:"local",inputValidator:a=>["backend","local","all"].includes(a)?!0:"请输入有效的清理类型: backend, local 或 all"});if(await me.confirm(`确定要清理${e==="backend"?"后端":e==="local"?"本地":"所有"}优化结果图片吗？此操作不可恢复。`,"确认清理",{confirmButtonText:"确定清理",cancelButtonText:"取消",type:"warning"})==="confirm"){if(e==="backend"||e==="all"){const a=Y();if(a&&a!=="default"){const n=await A.cleanupImages(a+"/optimizer_state");if(n.success)console.log("后端图片清理完成:",n.message);else throw new Error(`清理后端图片失败: ${n.message}`)}}if(e==="local"||e==="all"){const a=C.value.map(u=>u.name),n=await r("/api/cleanup-local-images",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({fileNames:a})});if(n.ok)console.log("本地图片清理完成");else throw new Error(`清理本地图片失败: ${n.status}`)}C.value=[],p.success(`${e==="backend"?"后端":e==="local"?"本地":"所有"}图片清理完成`)}}catch(e){e!=="cancel"&&(console.error("清理图片失败:",e),p.error("清理图片失败"))}};return St(()=>{j(),he(),w.value&&localStorage.setItem("currentTrainingTask",JSON.stringify(w.value))}),(e,t)=>{var qe;const a=N("el-button"),n=N("el-input"),u=N("el-form-item"),v=N("el-col"),b=N("el-row"),M=N("el-option"),f=N("el-select"),S=N("el-form"),O=N("el-tag"),h=N("el-descriptions-item"),U=N("el-descriptions"),J=N("el-collapse-item"),te=N("el-collapse"),oe=N("el-progress"),K=N("el-statistic"),W=N("el-empty"),se=N("el-table-column"),de=N("el-table"),pe=N("el-card"),Fe=N("el-skeleton"),He=N("el-icon"),It=N("el-dialog");return T(),x("div",Rt,[o(pe,{class:"result-card"},{header:s(()=>[d("div",Lt,[t[13]||(t[13]=d("span",null,"优化结果展示",-1)),d("div",Dt,[o(a,{onClick:tt,type:"info",size:"small"},{default:s(()=>t[10]||(t[10]=[g("测试连接")])),_:1}),o(a,{onClick:ct,loading:H.value,disabled:z.value},{default:s(()=>[g(y(z.value?"优化中...":"开始优化"),1)]),_:1},8,["loading","disabled"]),z.value?(T(),We(a,{key:0,onClick:pt,type:"warning",size:"small",disabled:H.value},{default:s(()=>t[11]||(t[11]=[g(" 停止优化 ")])),_:1},8,["disabled"])):E("",!0),o(a,{type:"primary",onClick:kt,disabled:z.value},{default:s(()=>t[12]||(t[12]=[g("刷新结果")])),_:1},8,["disabled"])])])]),default:s(()=>{var $;return[d("div",Bt,[d("div",Vt,[d("div",Jt,[t[15]||(t[15]=d("h3",null,"🎯优化配置",-1)),B.value?(T(),We(a,{key:0,type:"primary",size:"small",onClick:$t},{default:s(()=>t[14]||(t[14]=[g(" 重新配置 ")])),_:1})):E("",!0)]),o(S,{model:_.value,"label-width":"120px"},{default:s(()=>[o(b,{gutter:20},{default:s(()=>[o(v,{span:12},{default:s(()=>[o(u,{label:"输出路径"},{default:s(()=>[o(n,{modelValue:_.value.outputPath,"onUpdate:modelValue":t[0]||(t[0]=k=>_.value.outputPath=k),placeholder:"请输入输出路径"},null,8,["modelValue"])]),_:1})]),_:1}),o(v,{span:12},{default:s(()=>[o(u,{label:"图片路径"},{default:s(()=>[o(n,{modelValue:_.value.imagePath,"onUpdate:modelValue":t[1]||(t[1]=k=>_.value.imagePath=k),placeholder:"可选，默认与输出路径相同"},null,8,["modelValue"])]),_:1})]),_:1})]),_:1}),o(b,{gutter:20},{default:s(()=>[o(v,{span:12},{default:s(()=>[o(u,{label:"CUDA设备"},{default:s(()=>[o(n,{modelValue:_.value.cudaDevices,"onUpdate:modelValue":t[2]||(t[2]=k=>_.value.cudaDevices=k),placeholder:"默认: 0"},null,8,["modelValue"])]),_:1})]),_:1}),o(v,{span:12},{default:s(()=>[o(u,{label:"环境"},{default:s(()=>[o(f,{modelValue:_.value.env,"onUpdate:modelValue":t[3]||(t[3]=k=>_.value.env=k),placeholder:"选择环境"},{default:s(()=>[o(M,{label:"pytorch112_py311",value:"pytorch112_py311"}),o(M,{label:"tensorflow_py39",value:"tensorflow_py39"})]),_:1},8,["modelValue"])]),_:1})]),_:1})]),_:1}),o(b,{gutter:20},{default:s(()=>[o(v,{span:12},{default:s(()=>[o(u,{label:"回调URL"},{default:s(()=>[o(n,{modelValue:_.value.callbackUrl,"onUpdate:modelValue":t[4]||(t[4]=k=>_.value.callbackUrl=k),placeholder:"可选"},null,8,["modelValue"])]),_:1})]),_:1}),o(v,{span:12})]),_:1}),o(b,{gutter:20},{default:s(()=>[o(v,{span:24},{default:s(()=>[o(u,{label:"Python后端URL"},{default:s(()=>[d("div",At,[o(n,{modelValue:_e.value,"onUpdate:modelValue":t[5]||(t[5]=k=>_e.value=k),placeholder:"请输入Python后端URL，例如：http://localhost:7000"},null,8,["modelValue"]),o(a,{type:"primary",onClick:et},{default:s(()=>t[16]||(t[16]=[g("更新后端")])),_:1})])]),_:1})]),_:1})]),_:1})]),_:1},8,["model"]),d("div",jt,[o(te,{modelValue:ze.value,"onUpdate:modelValue":t[6]||(t[6]=k=>ze.value=k)},{default:s(()=>[o(J,{title:"📊 JSON数据监控 - 查看将要发送给后端的数据",name:"jsonMonitor"},{default:s(()=>[d("div",Mt,[o(b,{gutter:20},{default:s(()=>[o(v,{span:12},{default:s(()=>{var k,G;return[t[17]||(t[17]=d("h4",null,"🔧 预测器配置",-1)),d("div",Ft,[o(O,{type:((k=q())==null?void 0:k.source)==="predictor_export"?"success":"info",size:"small"},{default:s(()=>{var Ke;return[g(y(ot((Ke=q())==null?void 0:Ke.source)),1)]}),_:1},8,["type"]),(G=q())!=null&&G.fileName?(T(),x("span",Ht," 文件: "+y(q().fileName),1)):E("",!0)]),o(n,{type:"textarea",rows:8,value:Oe(q()),readonly:"",class:"json-display"},null,8,["value"])]}),_:1}),o(v,{span:12},{default:s(()=>[t[18]||(t[18]=d("h4",null,"⚙️ 任务配置",-1)),o(n,{type:"textarea",rows:8,value:Oe(_.value),readonly:"",class:"json-display"},null,8,["value"])]),_:1})]),_:1}),d("div",qt,[o(O,{type:"info"},{default:s(()=>[g("预测器配置大小: "+y(ke(q())),1)]),_:1}),o(O,{type:"success"},{default:s(()=>[g("任务配置大小: "+y(ke(_.value)),1)]),_:1}),o(O,{type:"warning"},{default:s(()=>[g("总数据大小: "+y(st()),1)]),_:1})]),ue()||X()?(T(),x("div",Kt,[t[27]||(t[27]=d("h4",null,"📁 已保存的配置文件",-1)),ue()?(T(),x("div",Wt,[t[22]||(t[22]=d("h5",null,"📋 完整优化配置文件",-1)),o(U,{column:2,size:"small",border:""},{default:s(()=>[o(h,{label:"文件名"},{default:s(()=>[g(y(ue().fileName),1)]),_:1}),o(h,{label:"文件大小"},{default:s(()=>[g(y(at(ue().size)),1)]),_:1}),o(h,{label:"保存时间"},{default:s(()=>[g(y(Ee(ue().timestamp)),1)]),_:1}),o(h,{label:"状态"},{default:s(()=>[o(O,{type:"success",size:"small"},{default:s(()=>t[19]||(t[19]=[g("已保存到本地")])),_:1})]),_:1})]),_:1}),d("div",Gt,[o(a,{size:"small",type:"primary",onClick:nt},{default:s(()=>t[20]||(t[20]=[g("重新下载完整配置")])),_:1}),o(a,{size:"small",type:"info",onClick:lt},{default:s(()=>t[21]||(t[21]=[g("查看完整配置")])),_:1})])])):E("",!0),X()?(T(),x("div",Qt,[t[26]||(t[26]=d("h5",null,"🔧 Predictor导出配置文件",-1)),o(U,{column:2,size:"small",border:""},{default:s(()=>[o(h,{label:"文件名"},{default:s(()=>[g(y(X().fileName),1)]),_:1}),o(h,{label:"算法ID"},{default:s(()=>[g(y(X().algorithmId),1)]),_:1}),o(h,{label:"保存时间"},{default:s(()=>[g(y(Ee(X().timestamp)),1)]),_:1}),o(h,{label:"状态"},{default:s(()=>[o(O,{type:"success",size:"small"},{default:s(()=>t[23]||(t[23]=[g("已保存到前端")])),_:1})]),_:1})]),_:1}),d("div",Xt,[o(a,{size:"small",type:"success",onClick:rt},{default:s(()=>t[24]||(t[24]=[g("下载Predictor配置")])),_:1}),o(a,{size:"small",type:"info",onClick:it},{default:s(()=>t[25]||(t[25]=[g("查看Predictor配置")])),_:1})])])):E("",!0)])):E("",!0)])]),_:1})]),_:1},8,["modelValue"])])]),z.value||B.value?(T(),x("div",Yt,[t[28]||(t[28]=d("h3",null,"优化进度",-1)),o(oe,{percentage:c.value,status:l.value},null,8,["percentage","status"]),d("div",Zt,y(m.value),1),w.value?(T(),x("div",eo,[o(U,{column:2,size:"small"},{default:s(()=>[o(h,{label:"任务ID"},{default:s(()=>[g(y(w.value.task_id),1)]),_:1}),o(h,{label:"开始时间"},{default:s(()=>[g(y(w.value.start_time||"--"),1)]),_:1}),o(h,{label:"状态"},{default:s(()=>[g(y(Ue(w.value.status)),1)]),_:1}),o(h,{label:"输出路径"},{default:s(()=>[g(y(w.value.output_path||_.value.outputPath),1)]),_:1})]),_:1})])):E("",!0)])):E("",!0),B.value||V.value?(T(),x("div",to,[t[34]||(t[34]=d("h3",null,"📊 优化结果数据",-1)),w.value?(T(),x("div",oo,[o(b,{gutter:16},{default:s(()=>[o(v,{span:6},{default:s(()=>[o(K,{title:"任务状态",value:Ue(w.value.status)},null,8,["value"])]),_:1}),o(v,{span:6},{default:s(()=>[o(K,{title:"运行时长",value:_t(),suffix:"分钟"},null,8,["value"])]),_:1}),o(v,{span:6},{default:s(()=>[o(K,{title:"输出路径",value:w.value.output_path||"未设置"},null,8,["value"])]),_:1}),o(v,{span:6},{default:s(()=>[o(K,{title:"结果文件",value:C.value.length,suffix:"个"},null,8,["value"])]),_:1})]),_:1})])):E("",!0),V.value?(T(),x("div",so,[o(b,{gutter:20},{default:s(()=>[o(v,{span:12},{default:s(()=>[d("div",ao,[t[29]||(t[29]=d("h4",null,"🔄 优化收敛曲线",-1)),d("div",no,[o(W,{description:"图表数据准备中","image-size":80})])])]),_:1}),o(v,{span:12},{default:s(()=>[d("div",lo,[t[30]||(t[30]=d("h4",null,"📈 参数变化趋势",-1)),d("div",ro,[o(W,{description:"图表数据准备中","image-size":80})])])]),_:1})]),_:1})])):E("",!0),V.value?(T(),x("div",io,[t[32]||(t[32]=d("h4",null,"🎯 最佳解决方案",-1)),o(U,{column:2,border:""},{default:s(()=>[o(h,{label:"最优值"},{default:s(()=>{var k;return[g(y(((k=V.value)==null?void 0:k.best_value)||"计算中..."),1)]}),_:1}),o(h,{label:"迭代次数"},{default:s(()=>{var k;return[g(y(((k=V.value)==null?void 0:k.iterations)||"计算中..."),1)]}),_:1}),o(h,{label:"收敛状态"},{default:s(()=>{var k;return[g(y((k=V.value)!=null&&k.converged?"已收敛":"未收敛"),1)]}),_:1}),o(h,{label:"计算时间"},{default:s(()=>{var k;return[g(y(((k=V.value)==null?void 0:k.computation_time)||"计算中..."),1)]}),_:1})]),_:1}),($=V.value)!=null&&$.optimal_params?(T(),x("div",co,[t[31]||(t[31]=d("h5",null,"最优参数配置",-1)),o(de,{data:ht(V.value.optimal_params),size:"small",border:""},{default:s(()=>[o(se,{prop:"name",label:"参数名称",width:"200"}),o(se,{prop:"value",label:"最优值"}),o(se,{prop:"unit",label:"单位",width:"100"})]),_:1},8,["data"])])):E("",!0)])):E("",!0),B.value?(T(),x("div",uo,[t[33]||(t[33]=d("h4",null,"📁 结果文件信息",-1)),o(U,{column:3,size:"small",border:""},{default:s(()=>[o(h,{label:"图片数量"},{default:s(()=>[g(y(C.value.length)+" 个",1)]),_:1}),o(h,{label:"最新图片"},{default:s(()=>[g(y(wt()),1)]),_:1}),o(h,{label:"总文件大小"},{default:s(()=>[g(y(bt()),1)]),_:1})]),_:1})])):E("",!0)])):E("",!0)])]}),_:1}),o(pe,{class:"image-card-container"},{header:s(()=>[d("div",po,[t[38]||(t[38]=d("span",null,"🖼️ 优化结果图片",-1)),d("div",mo,[o(a,{type:"primary",size:"small",onClick:Z,loading:re.value},{default:s(()=>t[35]||(t[35]=[g(" 刷新图片 ")])),_:1},8,["loading"]),o(a,{type:"success",size:"small",onClick:gt,disabled:C.value.length===0},{default:s(()=>t[36]||(t[36]=[g(" 下载全部 ")])),_:1},8,["disabled"]),o(a,{type:"danger",size:"small",onClick:Pt,disabled:!_.value.imagePath},{default:s(()=>t[37]||(t[37]=[g(" 清理图片 ")])),_:1},8,["disabled"])])])]),default:s(()=>[d("div",go,[C.value.length===0&&!re.value?(T(),x("div",fo,[o(W,{description:"暂无优化结果图片"},{description:s(()=>[t[40]||(t[40]=d("p",null,"优化完成后，结果图片将在此处显示",-1)),o(a,{type:"primary",onClick:Z},{default:s(()=>t[39]||(t[39]=[g("刷新图片")])),_:1})]),_:1})])):re.value?(T(),x("div",vo,[o(Fe,{rows:3,animated:""})])):(T(),x("div",_o,[(T(!0),x(Ge,null,Qe(C.value,($,k)=>(T(),x("div",{key:$.name,class:"image-item"},[o(pe,{class:"image-card",shadow:"hover"},{header:s(()=>[d("div",ho,[d("span",yo,y(Ve($.name)),1),d("div",wo,[o(a,{type:"primary",size:"small",onClick:G=>Be($),icon:"View"},{default:s(()=>t[41]||(t[41]=[g(" 预览 ")])),_:2},1032,["onClick"]),o(a,{type:"success",size:"small",onClick:G=>Ie($),icon:"Download"},{default:s(()=>t[42]||(t[42]=[g(" 下载 ")])),_:2},1032,["onClick"])])])]),default:s(()=>[d("div",{class:"image-content",onClick:G=>Be($)},[d("img",{src:$.url,alt:$.name,class:"result-image",onLoad:je,onError:Me},null,40,ko),d("div",$o,[o(He,{class:"preview-icon"},{default:s(()=>[o(Xe(Ye))]),_:1})])],8,bo),d("div",Po,[o(U,{column:1,size:"small"},{default:s(()=>[o(h,{label:"文件名"},{default:s(()=>[g(y($.name),1)]),_:2},1024),o(h,{label:"大小"},{default:s(()=>[g(y(Te($.size)),1)]),_:2},1024),o(h,{label:"创建时间"},{default:s(()=>[g(y(Ce($.name)),1)]),_:2},1024)]),_:2},1024)])]),_:2},1024)]))),128))]))])]),_:1}),o(pe,{class:"image-card-container"},{header:s(()=>[d("div",Io,[t[46]||(t[46]=d("span",null,"📈 每代最优结构图",-1)),d("div",To,[o(a,{type:"primary",size:"small",onClick:ee,loading:ce.value},{default:s(()=>t[43]||(t[43]=[g(" 刷新结构图 ")])),_:1},8,["loading"]),o(a,{type:"success",size:"small",onClick:ft,disabled:L.value.length===0},{default:s(()=>t[44]||(t[44]=[g(" 下载全部 ")])),_:1},8,["disabled"]),o(a,{type:"danger",size:"small",onClick:vt,disabled:!_.value.imagePath},{default:s(()=>t[45]||(t[45]=[g(" 清理图片 ")])),_:1},8,["disabled"])])])]),default:s(()=>[d("div",Co,[L.value.length===0&&!ce.value?(T(),x("div",So,[o(W,{description:"暂无每代最优结构图"},{description:s(()=>[t[48]||(t[48]=d("p",null,"每代最优结构图将在此处显示",-1)),o(a,{type:"primary",onClick:ee},{default:s(()=>t[47]||(t[47]=[g("刷新结构图")])),_:1})]),_:1})])):ce.value?(T(),x("div",xo,[o(Fe,{rows:3,animated:""})])):(T(),x("div",No,[(T(!0),x(Ge,null,Qe(L.value,($,k)=>(T(),x("div",{key:$.name,class:"image-item"},[o(pe,{class:"image-card",shadow:"hover"},{header:s(()=>[d("div",zo,[d("span",Uo,y(Ve($.name)),1),d("div",Oo,[o(a,{type:"primary",size:"small",onClick:G=>Je($),icon:"View"},{default:s(()=>t[49]||(t[49]=[g(" 预览 ")])),_:2},1032,["onClick"]),o(a,{type:"success",size:"small",onClick:G=>Ae($),icon:"Download"},{default:s(()=>t[50]||(t[50]=[g(" 下载 ")])),_:2},1032,["onClick"])])])]),default:s(()=>[d("div",{class:"image-content",onClick:G=>Je($)},[d("img",{src:$.url,alt:$.name,class:"result-image",onLoad:je,onError:Me},null,40,Ro),d("div",Lo,[o(He,{class:"preview-icon"},{default:s(()=>[o(Xe(Ye))]),_:1})])],8,Eo),d("div",Do,[o(U,{column:1,size:"small"},{default:s(()=>[o(h,{label:"文件名"},{default:s(()=>[g(y($.name),1)]),_:2},1024),o(h,{label:"大小"},{default:s(()=>[g(y(Te($.size)),1)]),_:2},1024),o(h,{label:"创建时间"},{default:s(()=>[g(y(Ce($.name)),1)]),_:2},1024)]),_:2},1024)])]),_:2},1024)]))),128))]))])]),_:1}),o(It,{modelValue:ie.value,"onUpdate:modelValue":t[9]||(t[9]=$=>ie.value=$),title:((qe=Q.value)==null?void 0:qe.name)||"图片预览",width:"80%",center:""},{footer:s(()=>[d("div",Jo,[o(a,{onClick:t[7]||(t[7]=$=>ie.value=!1)},{default:s(()=>t[51]||(t[51]=[g("关闭")])),_:1}),o(a,{type:"primary",onClick:t[8]||(t[8]=$=>Ie(Q.value))},{default:s(()=>t[52]||(t[52]=[g("下载图片")])),_:1})])]),default:s(()=>[Q.value?(T(),x("div",Bo,[d("img",{src:Q.value.url,alt:Q.value.name,class:"preview-image"},null,8,Vo)])):E("",!0)]),_:1},8,["modelValue","title"])])}}}),Ho=xt(Ao,[["__scopeId","data-v-687cd9aa"]]);export{Ho as default};
